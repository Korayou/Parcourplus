<school>
    <div if={props.shouldShowInfos} class="box p-2 m-2">
        <iframe width="100%" height="350" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" 
        src="https://www.openstreetmap.org/export/embed.html?bbox=-14.655761718750002%2C40.56389453066509%2C13.601074218750002%2C51.754240074033525&amp;layer=mapnik" 
        style="border-radius: 5px;"></iframe>
        <br>
        <div class="block control has-icons-left is-inline-block is-pulled-right">
            <input class="input" type="search" placeholder="Établissement">
            <span class="icon is-small is-left">
                <i class="fas fa-search"></i>
            </span>
        </div>
		<table class="table is-fullwidth is-hoverable">
			<thead>
				<tr>
					<th><abbr title="name">Nom</abbr></th><a id="g_ea_lib_vx" onclick={sort}><span class="icon"><i class="fas fa-sort"></i></span></a>
					<th><abbr title="city">Ville</abbr></th><a id="ville_etab" onclick={sort}><span class="icon"><i class="fas fa-sort"></i></span></a>
					<th><abbr title="dept">Dpt</abbr></th><a id="dep" onclick={sort}><span class="icon"><i class="fas fa-sort"></i></span></a>
					<th><abbr title="moyenne">Moyenne</abbr></th><a id="moyenne" onclick={sort}><span class="icon"><i class="fas fa-sort"></i></span></a>
					<th><abbr title="selectivite">Sélectivité</abbr></th><a id="taux_acces_ens" onclick={sort}><span class="icon"><i class="fas fa-sort"></i></span></a>
				</tr>
			</thead>
            <tbody>
                <tr each={etablissement in state.items}>
                    <td>{etablissement.fields.g_ea_lib_vx}</td>
                    <td>{etablissement.fields.ville_etab}</td>
                    <td>{etablissement.fields.dep}</td>
                    <td>{etablissement.fields.moyenne}</td>
                    <td>{etablissement.fields.taux_acces_ens}</td>
                </tr>
            </tbody>
        </table>
    </div>

    <script>
        import PAPI from '../javascript/parcoursup-link.js'

        async function fetchEtablissement(course) {
            return PAPI.fetchEtablissement(course.fili, course.sousfili, course.soussousfili);
        }

        export default function search() {
            return {
                onBeforeMount(props, state) {
                    state = {
                        items: null,
                        breakCycle: false,
                        ascOrder: true
                    }
                },
                onUpdated(props, state) {
                    if (!props.shouldShowInfos || state.breakCycle) return
                    fetchEtablissement(props.course).then((response) => {
                        response.forEach(etablissement => {
                            // calcul la moyenne
                            let pct_sansmention = etablissement.fields.pct_sansmention
                            let pct_AB = etablissement.fields.pct_ab
                            let pct_B = etablissement.fields.pct_b
                            let pct_TB = etablissement.fields.pct_tb
                            let pct_TBF = etablissement.fields.pct_tbf
                            
                            // On prend la moyenne des moyennes comprises dans la mention
                            // Exemple : Assez bien est entre 12 et 14 donc 13.
                            etablissement.fields.moyenne = ((pct_TBF*19)+(pct_TB*17)+(pct_B*15)+(pct_AB*13)+(pct_sansmention*11))/100
                        })

                        state.breakCycle = true
                        this.update({
                            items: response
                        })
                        state.breakCycle = false
                    })
                },
                sort(e){
                    console.log("sort")
                    console.log(e.target)
                    if (this.state.ascOrder){
                        this.state.items.sort((etablissement1, etablissement2)=>etablissement2.fields[order]-etablissement1.fields[order]))
                    } else {
                        this.state.items.sort((etablissement1, etablissement2)=>etablissement1.fields[order]-etablissement2.fields[order]))
                    }
                    this.state.ascOrder=!this.state.ascOrder
                    this.update()
                }
            }
        }
    </script>
</school>